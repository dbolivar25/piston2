module Main (main) where

import Lib

import Control.Exception (assert)

main :: IO ()
main = do
    print loremEncoded
    print $ assert (lorem == loremDecoded) $ assert (loremLength == loremDecodedLength) "All tests passed"
    print compression
  where
    lorem = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi placerat, velit ut fringilla tristique, risus ex sollicitudin risus, vitae cursus est nisl a nisi. Sed quis efficitur orci, ac fermentum felis. Vivamus finibus at nunc vel ullamcorper. Donec luctus diam non libero fringilla hendrerit. Quisque hendrerit odio ut iaculis condimentum. Morbi luctus euismod commodo. Suspendisse ut venenatis justo, eget varius urna. Donec euismod, nisl eget rhoncus blandit, sapien ipsum pulvinar sapien, sit amet pharetra risus tortor vel quam. Nulla vehicula sollicitudin libero, molestie mattis turpis auctor a. Praesent a odio a justo pulvinar egestas. Praesent eleifend neque aliquet, gravida magna sit amet, molestie erat. Mauris dignissim risus sapien, at cursus nisi dictum lobortis. Praesent cursus turpis id ipsum gravida consectetur. Phasellus egestas nec nibh vel condimentum. Nam convallis, orci eu iaculis ullamcorper, velit justo imperdiet quam, vitae eleifend sem tortor eget urna. Curabitur sodales malesuada leo, eget pharetra lectus sodales non. Duis consequat turpis in lorem tristique, at viverra nunc condimentum. Nulla blandit aliquet risus sed vehicula. Nunc ac turpis id mi pellentesque luctus a eu leo. Mauris porta, turpis sed accumsan condimentum, tortor lectus lacinia est, quis pulvinar odio turpis ac diam. Sed quis commodo nisi. Sed sed accumsan nunc, non mollis risus. Pellentesque posuere erat eu tortor tristique, quis sagittis elit bibendum. Suspendisse laoreet sollicitudin tristique. Ut ac ligula urna. Aliquam malesuada risus eu nunc porta consequat. Vestibulum mollis nisi diam, eu semper ante posuere et. Pellentesque vestibulum pharetra leo bibendum ullamcorper. Vestibulum sit amet dolor non odio egestas sagittis. Sed luctus eros a laoreet vehicula. Nulla scelerisque odio in augue porttitor, eu auctor mi ornare. Etiam venenatis metus non orci semper viverra. Donec non risus sit amet dui lacinia hendrerit nec eget mi. Etiam mi urna, eleifend blandit lorem ac, fringilla volutpat massa. Maecenas vitae luctus leo, eget elementum enim. Nunc accumsan consequat lacinia. Phasellus euismod pellentesque ipsum, vel placerat sem rutrum vitae. Vivamus ut ipsum sit amet nisi feugiat ullamcorper posuere non neque. Fusce a nisl eleifend, vehicula ligula a, porta lacus. Curabitur commodo erat et ante commodo vulputate. Nulla in arcu quis magna tempus ullamcorper. Pellentesque orci tortor, gravida sed dui id, facilisis commodo nunc. Donec tempor lorem et nisl imperdiet, sed faucibus arcu laoreet. Mauris facilisis gravida diam, ut suscipit est. Fusce odio metus, ullamcorper sit amet efficitur nec, accumsan iaculis lacus. Etiam vel augue ultrices, pretium ex vel, rhoncus neque. Aliquam tempus volutpat ipsum. In iaculis ante neque, non faucibus elit fermentum sit amet. Phasellus blandit varius varius. Phasellus sed dictum massa. Aliquam tortor nunc, placerat eget vestibulum et, molestie non quam. Nulla arcu justo, rhoncus venenatis elit vel, dictum varius est. Suspendisse est tellus, aliquam in gravida nec, malesuada non dui. Phasellus elementum, risus ut porta maximus, lectus orci elementum mauris, eget tristique turpis justo laoreet elit. Nulla facilisi. Ut accumsan, quam vel tincidunt egestas, ligula tellus scelerisque metus, sit amet rhoncus odio quam eget purus. Donec ullamcorper ac dolor sit amet pellentesque. Sed vehicula urna erat. Praesent posuere consectetur orci, vel placerat erat mattis nec. Morbi ornare nisi eget pretium faucibus."
    loremEncoded = compress lorem
    loremDecoded = decompress loremEncoded
    loremLength = length lorem
    loremEncodedLength = length $ (\(lst, _, _) -> lst) loremEncoded
    loremDecodedLength = length loremDecoded
    compression = 1 - fromIntegral loremEncodedLength / fromIntegral loremLength
